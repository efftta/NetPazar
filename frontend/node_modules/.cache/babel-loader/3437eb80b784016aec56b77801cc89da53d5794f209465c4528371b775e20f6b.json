{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EFTA\\\\Desktop\\\\netpazar\\\\frontend\\\\src\\\\pages\\\\OrderHistory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { fetchUserOrders, cancelOrderApi } from \"../api/orderApi\"; // cancelOrderApi ekledim iptal için\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STATUS_STEPS = [{\n  status: \"pending\",\n  label: \"Beklemede\",\n  color: \"text-yellow-400\"\n}, {\n  status: \"shipped\",\n  label: \"Kargoya Verildi\",\n  color: \"text-blue-400\"\n}, {\n  status: \"on_the_way\",\n  label: \"Yola Çıktı\",\n  color: \"text-green-400\"\n}];\nconst OrderHistory = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const {\n    token,\n    isAuthenticated,\n    loading: authLoading\n  } = useAuth();\n\n  // Local durumları tutmak için bir state, orijinal order.status dışında\n  // ordersStatus objesi: { orderId: currentStatusIndex, ... }\n  const [ordersStatus, setOrdersStatus] = useState({});\n  const timersRef = useRef({}); // Zamanlayıcıları tutmak için\n\n  useEffect(() => {\n    if (!authLoading && !isAuthenticated) {\n      navigate(\"/login\");\n      return;\n    }\n    if (!authLoading && isAuthenticated && token) {\n      const getOrders = async () => {\n        try {\n          setLoading(true);\n          setError(null);\n          const data = await fetchUserOrders(token);\n          setOrders(data);\n\n          // Her siparişin durum indexini başlat\n          const initialStatuses = {};\n          data.forEach(order => {\n            // İptal edilmişse durum yok\n            if (order.status === \"cancelled\") {\n              initialStatuses[order._id] = -1; // iptal\n            } else if (order.status === \"delivered\") {\n              initialStatuses[order._id] = STATUS_STEPS.length; // Teslim edildi\n            } else {\n              // Başlangıç durumu 'pending' kabul edelim (index 0)\n              initialStatuses[order._id] = 0;\n            }\n          });\n          setOrdersStatus(initialStatuses);\n        } catch (err) {\n          console.error(\"Sipariş geçmişi alınırken hata:\", err);\n          setError(err.message || \"Sipariş geçmişi yüklenirken bir hata oluştu.\");\n        } finally {\n          setLoading(false);\n        }\n      };\n      getOrders();\n    }\n  }, [authLoading, isAuthenticated, token, navigate]);\n  useEffect(() => {\n    // Zamanlayıcıları ayarla\n    Object.entries(ordersStatus).forEach(([orderId, statusIndex]) => {\n      if (statusIndex === -1 || statusIndex >= STATUS_STEPS.length) {\n        // İptal edilmiş ya da teslim edilmiş sipariş için timer kurma\n        return;\n      }\n      // Eğer zaten timer varsa temizle\n      if (timersRef.current[orderId]) {\n        clearTimeout(timersRef.current[orderId]);\n      }\n      // 10 saniyede bir sonraki duruma geç\n      timersRef.current[orderId] = setTimeout(() => {\n        setOrdersStatus(prev => {\n          // İptal edilmiş ya da teslim edilmiş siparişlerde değişiklik yok\n          if (prev[orderId] === -1 || prev[orderId] >= STATUS_STEPS.length) return prev;\n          const newIndex = prev[orderId] + 1;\n          return {\n            ...prev,\n            [orderId]: newIndex\n          };\n        });\n      }, 10000);\n    });\n\n    // Cleanup fonksiyonu (component unmount veya ordersStatus değişince)\n    return () => {\n      Object.values(timersRef.current).forEach(clearTimeout);\n      timersRef.current = {};\n    };\n  }, [ordersStatus]);\n  const handleCancelOrder = async orderId => {\n    try {\n      // Backend'e iptal isteği gönder\n      if (token) {\n        await cancelOrderApi(orderId, token);\n      }\n\n      // Local olarak durumu güncelle\n      setOrdersStatus(prev => ({\n        ...prev,\n        [orderId]: -1\n      }));\n      setOrders(prev => prev.map(order => order._id === orderId ? {\n        ...order,\n        status: \"cancelled\"\n      } : order));\n    } catch (err) {\n      alert(\"Sipariş iptal edilirken hata oluştu.\");\n      console.error(err);\n    }\n  };\n  const formatDate = dateStr => {\n    const date = new Date(dateStr);\n    return date.toLocaleDateString(\"tr-TR\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    });\n  };\n  if (authLoading || loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 text-white p-6 flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sipari\\u015F ge\\xE7mi\\u015Fi y\\xFCkleniyor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 text-white p-6 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-6\",\n        children: \"Sipari\\u015F Ge\\xE7mi\\u015Fi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-400\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/login\"),\n        className: \"mt-4 inline-block bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-xl\",\n        children: \"Giri\\u015F Yap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Sipari\\u015F Ge\\xE7mi\\u015Fi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), orders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hen\\xFCz bir sipari\\u015Finiz yok.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-6\",\n      children: orders.map(order => {\n        var _order$products, _order$totalPrice;\n        const statusIndex = ordersStatus[order._id];\n        let statusLabel = \"\";\n        let statusColor = \"text-yellow-400\";\n        if (statusIndex === -1) {\n          statusLabel = \"İptal Edildi\";\n          statusColor = \"text-red-400\";\n        } else if (statusIndex >= 0 && statusIndex < STATUS_STEPS.length) {\n          statusLabel = STATUS_STEPS[statusIndex].label;\n          statusColor = STATUS_STEPS[statusIndex].color;\n        } else if (order.status === \"delivered\") {\n          statusLabel = \"Teslim Edildi\";\n          statusColor = \"text-green-400\";\n        } else {\n          statusLabel = \"Bilinmeyen Durum\";\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 rounded-xl shadow-md p-4 hover:ring-2 hover:ring-green-400 transition-all\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-lg font-semibold\",\n                children: [\"Sipari\\u015F No: \", order._id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-400 text-sm\",\n                children: formatDate(order.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-300\",\n                children: [\"\\xDCr\\xFCn Say\\u0131s\\u0131: \", ((_order$products = order.products) === null || _order$products === void 0 ? void 0 : _order$products.length) || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-300\",\n                children: [\"Toplam: \\u20BA\", (_order$totalPrice = order.totalPrice) === null || _order$totalPrice === void 0 ? void 0 : _order$totalPrice.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: `text-sm font-semibold ${statusColor}`,\n                children: statusLabel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), statusIndex !== -1 && statusLabel !== \"Teslim Edildi\" && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCancelOrder(order._id),\n            className: \"mt-3 bg-red-600 text-white py-1 px-3 rounded hover:bg-red-700\",\n            children: \"Sipari\\u015Fi \\u0130ptal Et\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/order/${order._id}`),\n            className: \"mt-3 ml-3 bg-gray-600 text-white py-1 px-3 rounded hover:bg-gray-700\",\n            children: \"Detaylar\\u0131 G\\xF6r\\xFCnt\\xFCle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderHistory, \"UiDbx/Ijef8Pqu3WpKA4YfVEHLg=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = OrderHistory;\nexport default OrderHistory;\nvar _c;\n$RefreshReg$(_c, \"OrderHistory\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","useAuth","fetchUserOrders","cancelOrderApi","jsxDEV","_jsxDEV","STATUS_STEPS","status","label","color","OrderHistory","_s","orders","setOrders","loading","setLoading","error","setError","navigate","token","isAuthenticated","authLoading","ordersStatus","setOrdersStatus","timersRef","getOrders","data","initialStatuses","forEach","order","_id","length","err","console","message","Object","entries","orderId","statusIndex","current","clearTimeout","setTimeout","prev","newIndex","values","handleCancelOrder","map","alert","formatDate","dateStr","date","Date","toLocaleDateString","year","month","day","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_order$products","_order$totalPrice","statusLabel","statusColor","createdAt","products","totalPrice","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/EFTA/Desktop/netpazar/frontend/src/pages/OrderHistory.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\"; \r\nimport { fetchUserOrders, cancelOrderApi } from \"../api/orderApi\"; // cancelOrderApi ekledim iptal için\r\n\r\nconst STATUS_STEPS = [\r\n  { status: \"pending\", label: \"Beklemede\", color: \"text-yellow-400\" },\r\n  { status: \"shipped\", label: \"Kargoya Verildi\", color: \"text-blue-400\" },\r\n  { status: \"on_the_way\", label: \"Yola Çıktı\", color: \"text-green-400\" },\r\n];\r\n\r\nconst OrderHistory = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  const { token, isAuthenticated, loading: authLoading } = useAuth();\r\n\r\n  // Local durumları tutmak için bir state, orijinal order.status dışında\r\n  // ordersStatus objesi: { orderId: currentStatusIndex, ... }\r\n  const [ordersStatus, setOrdersStatus] = useState({});\r\n  const timersRef = useRef({}); // Zamanlayıcıları tutmak için\r\n\r\n  useEffect(() => {\r\n    if (!authLoading && !isAuthenticated) {\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n    if (!authLoading && isAuthenticated && token) {\r\n      const getOrders = async () => {\r\n        try {\r\n          setLoading(true);\r\n          setError(null);\r\n          const data = await fetchUserOrders(token);\r\n          setOrders(data);\r\n\r\n          // Her siparişin durum indexini başlat\r\n          const initialStatuses = {};\r\n          data.forEach((order) => {\r\n            // İptal edilmişse durum yok\r\n            if (order.status === \"cancelled\") {\r\n              initialStatuses[order._id] = -1; // iptal\r\n            } else if (order.status === \"delivered\") {\r\n              initialStatuses[order._id] = STATUS_STEPS.length; // Teslim edildi\r\n            } else {\r\n              // Başlangıç durumu 'pending' kabul edelim (index 0)\r\n              initialStatuses[order._id] = 0;\r\n            }\r\n          });\r\n          setOrdersStatus(initialStatuses);\r\n        } catch (err) {\r\n          console.error(\"Sipariş geçmişi alınırken hata:\", err);\r\n          setError(err.message || \"Sipariş geçmişi yüklenirken bir hata oluştu.\");\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      getOrders();\r\n    }\r\n  }, [authLoading, isAuthenticated, token, navigate]);\r\n\r\n  useEffect(() => {\r\n    // Zamanlayıcıları ayarla\r\n    Object.entries(ordersStatus).forEach(([orderId, statusIndex]) => {\r\n      if (statusIndex === -1 || statusIndex >= STATUS_STEPS.length) {\r\n        // İptal edilmiş ya da teslim edilmiş sipariş için timer kurma\r\n        return;\r\n      }\r\n      // Eğer zaten timer varsa temizle\r\n      if (timersRef.current[orderId]) {\r\n        clearTimeout(timersRef.current[orderId]);\r\n      }\r\n      // 10 saniyede bir sonraki duruma geç\r\n      timersRef.current[orderId] = setTimeout(() => {\r\n        setOrdersStatus((prev) => {\r\n          // İptal edilmiş ya da teslim edilmiş siparişlerde değişiklik yok\r\n          if (prev[orderId] === -1 || prev[orderId] >= STATUS_STEPS.length) return prev;\r\n\r\n          const newIndex = prev[orderId] + 1;\r\n          return {\r\n            ...prev,\r\n            [orderId]: newIndex,\r\n          };\r\n        });\r\n      }, 10000);\r\n    });\r\n\r\n    // Cleanup fonksiyonu (component unmount veya ordersStatus değişince)\r\n    return () => {\r\n      Object.values(timersRef.current).forEach(clearTimeout);\r\n      timersRef.current = {};\r\n    };\r\n  }, [ordersStatus]);\r\n\r\n  const handleCancelOrder = async (orderId) => {\r\n    try {\r\n      // Backend'e iptal isteği gönder\r\n      if (token) {\r\n        await cancelOrderApi(orderId, token);\r\n      }\r\n\r\n      // Local olarak durumu güncelle\r\n      setOrdersStatus((prev) => ({\r\n        ...prev,\r\n        [orderId]: -1,\r\n      }));\r\n\r\n      setOrders((prev) =>\r\n        prev.map((order) =>\r\n          order._id === orderId ? { ...order, status: \"cancelled\" } : order\r\n        )\r\n      );\r\n    } catch (err) {\r\n      alert(\"Sipariş iptal edilirken hata oluştu.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateStr) => {\r\n    const date = new Date(dateStr);\r\n    return date.toLocaleDateString(\"tr-TR\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n\r\n  if (authLoading || loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 text-white p-6 flex justify-center items-center\">\r\n        <p>Sipariş geçmişi yükleniyor...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 text-white p-6 text-center\">\r\n        <h1 className=\"text-3xl font-bold mb-6\">Sipariş Geçmişi</h1>\r\n        <p className=\"text-red-400\">{error}</p>\r\n        <button\r\n          onClick={() => navigate(\"/login\")}\r\n          className=\"mt-4 inline-block bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-xl\"\r\n        >\r\n          Giriş Yap\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Sipariş Geçmişi</h1>\r\n\r\n      {orders.length === 0 ? (\r\n        <p>Henüz bir siparişiniz yok.</p>\r\n      ) : (\r\n        <div className=\"grid gap-6\">\r\n          {orders.map((order) => {\r\n            const statusIndex = ordersStatus[order._id];\r\n            let statusLabel = \"\";\r\n            let statusColor = \"text-yellow-400\";\r\n\r\n            if (statusIndex === -1) {\r\n              statusLabel = \"İptal Edildi\";\r\n              statusColor = \"text-red-400\";\r\n            } else if (statusIndex >= 0 && statusIndex < STATUS_STEPS.length) {\r\n              statusLabel = STATUS_STEPS[statusIndex].label;\r\n              statusColor = STATUS_STEPS[statusIndex].color;\r\n            } else if (order.status === \"delivered\") {\r\n              statusLabel = \"Teslim Edildi\";\r\n              statusColor = \"text-green-400\";\r\n            } else {\r\n              statusLabel = \"Bilinmeyen Durum\";\r\n            }\r\n\r\n            return (\r\n              <div\r\n                key={order._id}\r\n                className=\"bg-gray-800 rounded-xl shadow-md p-4 hover:ring-2 hover:ring-green-400 transition-all\"\r\n              >\r\n                <div className=\"flex justify-between items-center mb-2\">\r\n                  <div>\r\n                    <p className=\"text-lg font-semibold\">Sipariş No: {order._id}</p>\r\n                    <p className=\"text-gray-400 text-sm\">{formatDate(order.createdAt)}</p>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    <p className=\"text-sm text-gray-300\">\r\n                      Ürün Sayısı: {order.products?.length || 0}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-300\">\r\n                      Toplam: ₺{order.totalPrice?.toFixed(2)}\r\n                    </p>\r\n                    <p className={`text-sm font-semibold ${statusColor}`}>{statusLabel}</p>\r\n                  </div>\r\n                </div>\r\n\r\n                {statusIndex !== -1 && statusLabel !== \"Teslim Edildi\" && (\r\n                  <button\r\n                    onClick={() => handleCancelOrder(order._id)}\r\n                    className=\"mt-3 bg-red-600 text-white py-1 px-3 rounded hover:bg-red-700\"\r\n                  >\r\n                    Siparişi İptal Et\r\n                  </button>\r\n                )}\r\n\r\n                <button\r\n                  onClick={() => navigate(`/order/${order._id}`)}\r\n                  className=\"mt-3 ml-3 bg-gray-600 text-white py-1 px-3 rounded hover:bg-gray-700\"\r\n                >\r\n                  Detayları Görüntüle\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderHistory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}