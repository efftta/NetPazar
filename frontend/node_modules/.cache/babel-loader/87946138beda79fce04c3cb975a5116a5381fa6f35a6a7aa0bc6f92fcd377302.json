{"ast":null,"code":"// frontend/src/api/orderApi.js\nconst API_BASE_URL = import.meta.env.VITE_API_BASE_URL || \"http://localhost:5000/api\";\n\n// Yeni sipariş oluşturma\nexport const createOrder = async (orderData, token) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/orders`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}` // Token'ı header olarak gönder\n      },\n      body: JSON.stringify(orderData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || \"Sipariş oluşturulamadı.\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"createOrder API hatası:\", error);\n    throw error;\n  }\n};\n\n// Kullanıcının siparişlerini getirme\nexport const fetchUserOrders = async token => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/orders`, {\n      // Backend'deki router.get(\"/\") ile eşleşiyor\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}` // Token'ı header olarak gönder\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || \"Sipariş geçmişi alınamadı.\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"fetchUserOrders API hatası:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","import","meta","env","VITE_API_BASE_URL","createOrder","orderData","token","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","errorData","json","Error","message","error","console","fetchUserOrders"],"sources":["C:/Users/EFTA/Desktop/asdas2/frontend/src/api/orderApi.js"],"sourcesContent":["// frontend/src/api/orderApi.js\r\nconst API_BASE_URL = import.meta.env.VITE_API_BASE_URL || \"http://localhost:5000/api\";\r\n\r\n// Yeni sipariş oluşturma\r\nexport const createOrder = async (orderData, token) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/orders`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`, // Token'ı header olarak gönder\r\n      },\r\n      body: JSON.stringify(orderData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || \"Sipariş oluşturulamadı.\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"createOrder API hatası:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Kullanıcının siparişlerini getirme\r\nexport const fetchUserOrders = async (token) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/orders`, { // Backend'deki router.get(\"/\") ile eşleşiyor\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // Token'ı header olarak gönder\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || \"Sipariş geçmişi alınamadı.\");\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"fetchUserOrders API hatası:\", error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAErF;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,SAAS,EAAEC,KAAK,KAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,YAAY,SAAS,EAAE;MACrDU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUL,KAAK,EAAE,CAAE;MACpC,CAAC;MACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,SAAS;IAChC,CAAC,CAAC;IAEF,IAAI,CAACE,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,yBAAyB,CAAC;IACjE;IAEA,OAAO,MAAMZ,QAAQ,CAACU,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,eAAe,GAAG,MAAOhB,KAAK,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,YAAY,SAAS,EAAE;MAAE;MACvDU,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUL,KAAK,EAAE,CAAE;MACpC;IACF,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,4BAA4B,CAAC;IACpE;IAEA,OAAO,MAAMZ,QAAQ,CAACU,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}