{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EFTA\\\\Desktop\\\\asdas2\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.jsx\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { loginUser as apiLoginUser, registerUser as apiRegisterUser } from \"../api/authApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [authToken, setAuthToken] = useState(null);\n  useEffect(() => {\n    console.log(\"AuthContext useEffect çalıştı.\");\n    const tokenFromStorage = localStorage.getItem(\"token\");\n    const userData = localStorage.getItem(\"user\");\n    console.log(\"localStorage token:\", tokenFromStorage);\n    console.log(\"localStorage user data (string):\", userData);\n    if (tokenFromStorage && userData && userData !== \"undefined\") {\n      try {\n        const parsedUser = JSON.parse(userData);\n        setIsAuthenticated(true);\n        setAuthToken(tokenFromStorage);\n        setUser(parsedUser);\n        console.log(\"AuthContext: Kullanıcı yüklendi:\", parsedUser);\n      } catch (e) {\n        console.error(\"AuthContext: Error parsing user data from localStorage:\", e);\n        logout();\n        console.log(\"AuthContext: localStorage verisi parse edilemedi veya bozuk, çıkış yapıldı.\");\n      }\n    } else {\n      setIsAuthenticated(false);\n      setUser(null);\n      setAuthToken(null);\n      console.log(\"AuthContext: localStorage'da token, user bulunamadı veya user verisi 'undefined'.\");\n    }\n    setLoading(false);\n    console.log(\"AuthContext: Loading state false olarak ayarlandı.\");\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const data = await apiLoginUser(email, password);\n      localStorage.setItem(\"token\", data.token);\n      if (data.user) {\n        localStorage.setItem(\"user\", JSON.stringify(data.user));\n        setUser(data.user);\n        // --- BURADAKİ KONSOL LOGU EKLENDİ ---\n        console.log(\"AuthContext: Backend'den gelen user objesi (Login Başarılı):\", data.user);\n        // --- EKLENEN KOD BİTTİ ---\n      } else {\n        localStorage.removeItem(\"user\");\n        setUser(null);\n        console.warn(\"AuthContext: Giriş Başarılı ancak backend'den kullanıcı bilgisi gelmedi (data.user undefined).\");\n      }\n      setIsAuthenticated(true);\n      setAuthToken(data.token);\n      return true;\n    } catch (error) {\n      console.error(\"AuthContext: Login error:\", error.message);\n      return false;\n    }\n  };\n  const register = async (username, email, password, confirmPassword) => {\n    try {\n      const data = await apiRegisterUser(username, email, password, confirmPassword);\n      console.log(\"AuthContext: Kayıt Başarılı, backend yanıtı:\", data); // Kayıt sonrası backend yanıtını da kontrol edin\n      // OPTIONAL: Kayıt sonrası direkt giriş yapmak isterseniz buradan login fonksiyonunu çağırabilirsiniz\n      // if (data.token && data.user) {\n      //   localStorage.setItem(\"token\", data.token);\n      //   localStorage.setItem(\"user\", JSON.stringify(data.user));\n      //   setIsAuthenticated(true);\n      //   setAuthToken(data.token);\n      //   setUser(data.user);\n      // }\n      return true;\n    } catch (error) {\n      console.error(\"AuthContext: Register error:\", error.message);\n      throw error;\n    }\n  };\n  const updateProfile = updatedUserData => {\n    localStorage.setItem(\"user\", JSON.stringify(updatedUserData));\n    setUser(updatedUserData);\n    console.log(\"AuthContext: Profil güncellendi:\", updatedUserData);\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setIsAuthenticated(false);\n    setUser(null);\n    setAuthToken(null);\n    console.log(\"AuthContext: Çıkış yapıldı.\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      loading,\n      token: authToken,\n      login,\n      logout,\n      register,\n      setUser: updateProfile\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"M8t6dcBx8SxBzrpBRAOVQFluhFE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","loginUser","apiLoginUser","registerUser","apiRegisterUser","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","authToken","setAuthToken","console","log","tokenFromStorage","localStorage","getItem","userData","parsedUser","JSON","parse","e","error","logout","login","email","password","data","setItem","token","stringify","removeItem","warn","message","register","username","confirmPassword","updateProfile","updatedUserData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/EFTA/Desktop/asdas2/frontend/src/context/AuthContext.jsx"],"sourcesContent":["// src/context/AuthContext.jsx\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { loginUser as apiLoginUser, registerUser as apiRegisterUser } from \"../api/authApi\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [authToken, setAuthToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\"AuthContext useEffect çalıştı.\");\r\n    const tokenFromStorage = localStorage.getItem(\"token\");\r\n    const userData = localStorage.getItem(\"user\");\r\n\r\n    console.log(\"localStorage token:\", tokenFromStorage);\r\n    console.log(\"localStorage user data (string):\", userData);\r\n\r\n    if (tokenFromStorage && userData && userData !== \"undefined\") {\r\n      try {\r\n        const parsedUser = JSON.parse(userData);\r\n        setIsAuthenticated(true);\r\n        setAuthToken(tokenFromStorage);\r\n        setUser(parsedUser);\r\n        console.log(\"AuthContext: Kullanıcı yüklendi:\", parsedUser);\r\n      } catch (e) {\r\n        console.error(\"AuthContext: Error parsing user data from localStorage:\", e);\r\n        logout();\r\n        console.log(\"AuthContext: localStorage verisi parse edilemedi veya bozuk, çıkış yapıldı.\");\r\n      }\r\n    } else {\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n      setAuthToken(null);\r\n      console.log(\"AuthContext: localStorage'da token, user bulunamadı veya user verisi 'undefined'.\");\r\n    }\r\n\r\n    setLoading(false);\r\n    console.log(\"AuthContext: Loading state false olarak ayarlandı.\");\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const data = await apiLoginUser(email, password);\r\n      localStorage.setItem(\"token\", data.token);\r\n\r\n      if (data.user) {\r\n        localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n        setUser(data.user);\r\n        // --- BURADAKİ KONSOL LOGU EKLENDİ ---\r\n        console.log(\"AuthContext: Backend'den gelen user objesi (Login Başarılı):\", data.user);\r\n        // --- EKLENEN KOD BİTTİ ---\r\n      } else {\r\n        localStorage.removeItem(\"user\");\r\n        setUser(null);\r\n        console.warn(\"AuthContext: Giriş Başarılı ancak backend'den kullanıcı bilgisi gelmedi (data.user undefined).\");\r\n      }\r\n\r\n      setIsAuthenticated(true);\r\n      setAuthToken(data.token);\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"AuthContext: Login error:\", error.message);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password, confirmPassword) => {\r\n    try {\r\n      const data = await apiRegisterUser(username, email, password, confirmPassword);\r\n      console.log(\"AuthContext: Kayıt Başarılı, backend yanıtı:\", data); // Kayıt sonrası backend yanıtını da kontrol edin\r\n      // OPTIONAL: Kayıt sonrası direkt giriş yapmak isterseniz buradan login fonksiyonunu çağırabilirsiniz\r\n      // if (data.token && data.user) {\r\n      //   localStorage.setItem(\"token\", data.token);\r\n      //   localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n      //   setIsAuthenticated(true);\r\n      //   setAuthToken(data.token);\r\n      //   setUser(data.user);\r\n      // }\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"AuthContext: Register error:\", error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const updateProfile = (updatedUserData) => {\r\n    localStorage.setItem(\"user\", JSON.stringify(updatedUserData));\r\n    setUser(updatedUserData);\r\n    console.log(\"AuthContext: Profil güncellendi:\", updatedUserData);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n    setAuthToken(null);\r\n    console.log(\"AuthContext: Çıkış yapıldı.\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, user, loading, token: authToken, login, logout, register, setUser: updateProfile }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}