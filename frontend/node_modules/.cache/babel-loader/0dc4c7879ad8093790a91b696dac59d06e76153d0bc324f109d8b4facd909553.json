{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EFTA\\\\Desktop\\\\netpazar\\\\frontend\\\\src\\\\context\\\\FavoriteContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState, useCallback } from \"react\";\nimport { useAuth } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FavoriteContext = /*#__PURE__*/createContext();\nexport const FavoriteProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    token,\n    isAuthenticated,\n    loading: authLoading\n  } = useAuth();\n  const [favorites, setFavorites] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // API'nin temel URL'ini çevre değişkeninden alıyoruz.\n  // .env'deki REACT_APP_API_BASE_URL zaten /api içeriyor.\n  // Bu yüzden fetch çağrılarında tekrar \"/api\" eklemeyeceğiz.\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"\";\n  const fetchFavorites = useCallback(async () => {\n    if (!isAuthenticated || !token || authLoading) {\n      setFavorites([]);\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      // fetch call'larda API_BASE_URL zaten /api içerdiği için tekrar /api eklemeyin.\n      const response = await fetch(`${API_BASE_URL}/favorites`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        if (response.status === 401 || response.status === 403) {\n          console.warn(\"Favori çekme hatası: Yetkilendirme başarısız veya token geçersiz.\");\n          // Burada AuthContext'ten logout fonksiyonunu çağırabilirsiniz\n          // useAuth().logout(); // Eğer böyle bir kullanım mümkünse\n        }\n        const errorData = await response.json();\n        throw new Error(errorData.message || `Favoriler yüklenirken bir hata oluştu: ${response.status}`);\n      }\n      const data = await response.json();\n      setFavorites(data.map(favItem => ({\n        ...favItem.product,\n        _id: favItem.product._id,\n        favoriteId: favItem._id\n      })));\n      console.log(\"Favoriler backend'den yüklendi:\", data);\n    } catch (err) {\n      console.error(\"Favori yükleme hatası:\", err);\n      setError(err.message);\n      setFavorites([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, token, authLoading, API_BASE_URL]);\n  useEffect(() => {\n    if (!authLoading) {\n      fetchFavorites();\n    }\n  }, [fetchFavorites, authLoading]);\n  const toggleFavorite = useCallback(async product => {\n    if (!isAuthenticated) {\n      console.warn(\"Favoriye eklemek için giriş yapmalısınız.\");\n      return;\n    }\n    if (!token) {\n      console.error(\"Token mevcut değil. Favori işlemi yapılamaz.\");\n      setError(\"Yetkilendirme tokenı eksik. Lütfen tekrar giriş yapın.\");\n      return;\n    }\n    const isCurrentlyFavorited = favorites.some(item => item._id === product._id);\n    setError(null);\n    try {\n      let response;\n      if (isCurrentlyFavorited) {\n        // fetch call'larda API_BASE_URL zaten /api içerdiği için tekrar /api eklemeyin.\n        response = await fetch(`${API_BASE_URL}/favorites/${product._id}`, {\n          method: \"DELETE\",\n          headers: {\n            \"Authorization\": `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          throw new Error(data.message || `Favoriden çıkarılırken bir hata oluştu: ${response.status}`);\n        }\n        setFavorites(favorites.filter(item => item._id !== product._id));\n        console.log(\"Ürün favorilerden çıkarıldı:\", product.name);\n      } else {\n        // fetch call'larda API_BASE_URL zaten /api içerdiği için tekrar /api eklemeyin.\n        response = await fetch(`${API_BASE_URL}/favorites`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            productId: product._id\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          throw new Error(data.message || `Favoriye eklenirken bir hata oluştu: ${response.status}`);\n        }\n        setFavorites(prevFavorites => [...prevFavorites, {\n          ...data.product,\n          favoriteId: data._id\n        }]);\n        console.log(\"Ürün favorilere eklendi:\", data.product.name);\n      }\n    } catch (err) {\n      console.error(\"Favori işlemi hatası:\", err);\n      setError(err.message);\n    }\n  }, [favorites, isAuthenticated, token, API_BASE_URL]);\n  return /*#__PURE__*/_jsxDEV(FavoriteContext.Provider, {\n    value: {\n      favorites,\n      loading,\n      error,\n      toggleFavorite,\n      fetchFavorites\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoriteProvider, \"sGqKEn0FIoI/kr/d9ta/ZDOtTCs=\", false, function () {\n  return [useAuth];\n});\n_c = FavoriteProvider;\nexport const useFavorites = () => {\n  _s2();\n  return useContext(FavoriteContext);\n};\n_s2(useFavorites, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"FavoriteProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useCallback","useAuth","jsxDEV","_jsxDEV","FavoriteContext","FavoriteProvider","children","_s","user","token","isAuthenticated","loading","authLoading","favorites","setFavorites","setLoading","error","setError","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","fetchFavorites","response","fetch","headers","ok","status","console","warn","errorData","json","Error","message","data","map","favItem","product","_id","favoriteId","log","err","toggleFavorite","isCurrentlyFavorited","some","item","method","filter","name","body","JSON","stringify","productId","prevFavorites","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFavorites","_s2","$RefreshReg$"],"sources":["C:/Users/EFTA/Desktop/netpazar/frontend/src/context/FavoriteContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, useCallback } from \"react\";\r\nimport { useAuth } from \"./AuthContext\";\r\n\r\nexport const FavoriteContext = createContext();\r\n\r\nexport const FavoriteProvider = ({ children }) => {\r\n  const { user, token, isAuthenticated, loading: authLoading } = useAuth();\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // API'nin temel URL'ini çevre değişkeninden alıyoruz.\r\n  // .env'deki REACT_APP_API_BASE_URL zaten /api içeriyor.\r\n  // Bu yüzden fetch çağrılarında tekrar \"/api\" eklemeyeceğiz.\r\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"\";\r\n\r\n  const fetchFavorites = useCallback(async () => {\r\n    if (!isAuthenticated || !token || authLoading) {\r\n      setFavorites([]);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      // fetch call'larda API_BASE_URL zaten /api içerdiği için tekrar /api eklemeyin.\r\n      const response = await fetch(`${API_BASE_URL}/favorites`, { \r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 401 || response.status === 403) {\r\n          console.warn(\"Favori çekme hatası: Yetkilendirme başarısız veya token geçersiz.\");\r\n          // Burada AuthContext'ten logout fonksiyonunu çağırabilirsiniz\r\n          // useAuth().logout(); // Eğer böyle bir kullanım mümkünse\r\n        }\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || `Favoriler yüklenirken bir hata oluştu: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setFavorites(data.map(favItem => ({\r\n        ...favItem.product,\r\n        _id: favItem.product._id,\r\n        favoriteId: favItem._id\r\n      })));\r\n      console.log(\"Favoriler backend'den yüklendi:\", data);\r\n    } catch (err) {\r\n      console.error(\"Favori yükleme hatası:\", err);\r\n      setError(err.message);\r\n      setFavorites([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [isAuthenticated, token, authLoading, API_BASE_URL]);\r\n\r\n  useEffect(() => {\r\n    if (!authLoading) {\r\n      fetchFavorites();\r\n    }\r\n  }, [fetchFavorites, authLoading]);\r\n\r\n  const toggleFavorite = useCallback(async (product) => {\r\n    if (!isAuthenticated) {\r\n      console.warn(\"Favoriye eklemek için giriş yapmalısınız.\");\r\n      return;\r\n    }\r\n    if (!token) {\r\n        console.error(\"Token mevcut değil. Favori işlemi yapılamaz.\");\r\n        setError(\"Yetkilendirme tokenı eksik. Lütfen tekrar giriş yapın.\");\r\n        return;\r\n    }\r\n\r\n    const isCurrentlyFavorited = favorites.some((item) => item._id === product._id);\r\n    setError(null);\r\n\r\n    try {\r\n      let response;\r\n      if (isCurrentlyFavorited) {\r\n        // fetch call'larda API_BASE_URL zaten /api içerdiği için tekrar /api eklemeyin.\r\n        response = await fetch(`${API_BASE_URL}/favorites/${product._id}`, { \r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Authorization\": `Bearer ${token}`,\r\n          },\r\n        });\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          throw new Error(data.message || `Favoriden çıkarılırken bir hata oluştu: ${response.status}`);\r\n        }\r\n        setFavorites(favorites.filter((item) => item._id !== product._id));\r\n        console.log(\"Ürün favorilerden çıkarıldı:\", product.name);\r\n      } else {\r\n        // fetch call'larda API_BASE_URL zaten /api içerdiği için tekrar /api eklemeyin.\r\n        response = await fetch(`${API_BASE_URL}/favorites`, { \r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({ productId: product._id }),\r\n        });\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          throw new Error(data.message || `Favoriye eklenirken bir hata oluştu: ${response.status}`);\r\n        }\r\n        setFavorites((prevFavorites) => [...prevFavorites, { ...data.product, favoriteId: data._id }]);\r\n        console.log(\"Ürün favorilere eklendi:\", data.product.name);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Favori işlemi hatası:\", err);\r\n      setError(err.message);\r\n    }\r\n  }, [favorites, isAuthenticated, token, API_BASE_URL]);\r\n\r\n  return (\r\n    <FavoriteContext.Provider\r\n      value={{ favorites, loading, error, toggleFavorite, fetchFavorites }}\r\n    >\r\n      {children}\r\n    </FavoriteContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useFavorites = () => useContext(FavoriteContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}